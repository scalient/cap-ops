cur_dir=$PWD
prefix=<%= prefix.shellescape %>
cache_dir=<%= cache_dir.shellescape %>/chef

export -- BUNDLE_GEMFILE="/home/chef/server/Gemfile"

<% if respond_to?(:rbenv_version) %>
gem="rbenv exec gem"
bundle="rbenv exec bundle"

export -- RBENV_VERSION=<%= rbenv_version.shellescape %>
<% else %>
gem="gem"
bundle="bundle"
<% end %>

########################################################################################################################
# Install APT packages.                                                                                                #
########################################################################################################################

# Register the RabbitMQ APT repository.
echo "deb http://www.rabbitmq.com/debian/ testing main" | sudo -- tee -- /etc/apt/sources.list.d/rabbitmq.list
curl -s -- "https://www.rabbitmq.com/rabbitmq-signing-key-public.asc" | sudo -- apt-key add -

# Update the APT package index, upgrade existing packages, and install the requisite packages.
sudo -- apt-get -qq -- update
sudo -- apt-get -qqy -- upgrade
sudo -- apt-get -qqy -- install build-essential couchdb default-jre-headless git-core libgecode-dev libsqlite3-dev \
    libxml2-dev rabbitmq-server

########################################################################################################################
# Set up Rabbit queues for Chef use.                                                                                   #
########################################################################################################################

if [[ -z "$(sudo -- rabbitmqctl -q list_vhosts | grep -P -- "^/chef\$")" ]]; then
    sudo -- rabbitmqctl -q add_vhost /chef
fi

if [[ -z "$(sudo -- rabbitmqctl -q list_users | grep -P -- "^chef\\t")" ]]; then
    sudo -- rabbitmqctl -q add_user chef testing
fi

sudo -- rabbitmqctl -q set_permissions -p /chef chef ".*" ".*" ".*"
sudo -- service rabbitmq-server restart

########################################################################################################################
# Install the Chef server.                                                                                             #
########################################################################################################################

sudo -E -- $gem install bundler

<% if respond_to?(:rbenv_version) %>
sudo -E -- rbenv rehash
<% end %>

chef_create_user /home/chef

chef_install_repo /home/chef/server "git://github.com/carsomyr/cap-ops.git" chef-server

chef_create_dir "${prefix}/etc/chef-server"
chef_create_dir "${prefix}/var/chef-server"
chef_create_dir "${prefix}/var/log/chef-server"

install_file "${cache_dir}/solr.rb" "${prefix}/etc/chef-server"
install_file "${cache_dir}/server.rb" "${prefix}/etc/chef-server"

install_upstart "${cache_dir}/chef-expander.conf"
install_upstart "${cache_dir}/chef-server.conf"
install_upstart "${cache_dir}/chef-server-webui.conf"
install_upstart "${cache_dir}/chef-solr.conf"

# Install vendorized gems.
sudo -E -u chef -- $bundle install --quiet --path vendor/bundle
sudo -E -u chef -- $bundle exec chef-solr-installer -f -c "${prefix}/etc/chef-server/solr.rb" > /dev/null

# Use our sneaky Knife plugin to bypass the Chef server and prime the local CouchDB instance with client keys.
$bundle exec knife client create --private-key "${cache_dir}/validation.pem" -- chef-validator
$bundle exec knife client create --admin --private-key "${cache_dir}/webui.pem" -- chef-webui

install_file "${cache_dir}/validation.pem" "${prefix}/etc/chef-server"
install_file "${cache_dir}/webui.pem" "${prefix}/etc/chef-server"

# (Re)start services.
for service in "chef-expander" "chef-server" "chef-server-webui" "chef-solr"; do
    sudo -- service "$service" restart
done
